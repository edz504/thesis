// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// brute_force
List brute_force(NumericMatrix xPoints_mat, int k, std::vector<std::string> param_prefixes, std::string solver_dir, std::string log_dir);
RcppExport SEXP deepbayes_brute_force(SEXP xPoints_matSEXP, SEXP kSEXP, SEXP param_prefixesSEXP, SEXP solver_dirSEXP, SEXP log_dirSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type xPoints_mat(xPoints_matSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< std::vector<std::string> >::type param_prefixes(param_prefixesSEXP);
    Rcpp::traits::input_parameter< std::string >::type solver_dir(solver_dirSEXP);
    Rcpp::traits::input_parameter< std::string >::type log_dir(log_dirSEXP);
    __result = Rcpp::wrap(brute_force(xPoints_mat, k, param_prefixes, solver_dir, log_dir));
    return __result;
END_RCPP
}
// max_iter_optimize
List max_iter_optimize(NumericMatrix xPoints_mat, int k, int budget, std::string solver_dir, std::string log_dir);
RcppExport SEXP deepbayes_max_iter_optimize(SEXP xPoints_matSEXP, SEXP kSEXP, SEXP budgetSEXP, SEXP solver_dirSEXP, SEXP log_dirSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type xPoints_mat(xPoints_matSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type budget(budgetSEXP);
    Rcpp::traits::input_parameter< std::string >::type solver_dir(solver_dirSEXP);
    Rcpp::traits::input_parameter< std::string >::type log_dir(log_dirSEXP);
    __result = Rcpp::wrap(max_iter_optimize(xPoints_mat, k, budget, solver_dir, log_dir));
    return __result;
END_RCPP
}
// max_iter_brute_force
void max_iter_brute_force(NumericMatrix xPoints_mat, int k, std::string solver_dir, std::string log_dir);
RcppExport SEXP deepbayes_max_iter_brute_force(SEXP xPoints_matSEXP, SEXP kSEXP, SEXP solver_dirSEXP, SEXP log_dirSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type xPoints_mat(xPoints_matSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< std::string >::type solver_dir(solver_dirSEXP);
    Rcpp::traits::input_parameter< std::string >::type log_dir(log_dirSEXP);
    max_iter_brute_force(xPoints_mat, k, solver_dir, log_dir);
    return R_NilValue;
END_RCPP
}
// num_node_optimize
List num_node_optimize(NumericMatrix xPoints_mat, int k, int budget, std::string solver_dir, std::string log_dir);
RcppExport SEXP deepbayes_num_node_optimize(SEXP xPoints_matSEXP, SEXP kSEXP, SEXP budgetSEXP, SEXP solver_dirSEXP, SEXP log_dirSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type xPoints_mat(xPoints_matSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type budget(budgetSEXP);
    Rcpp::traits::input_parameter< std::string >::type solver_dir(solver_dirSEXP);
    Rcpp::traits::input_parameter< std::string >::type log_dir(log_dirSEXP);
    __result = Rcpp::wrap(num_node_optimize(xPoints_mat, k, budget, solver_dir, log_dir));
    return __result;
END_RCPP
}
// num_node_brute_force
void num_node_brute_force(NumericMatrix xPoints_mat, int k, std::string solver_dir, std::string log_dir);
RcppExport SEXP deepbayes_num_node_brute_force(SEXP xPoints_matSEXP, SEXP kSEXP, SEXP solver_dirSEXP, SEXP log_dirSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type xPoints_mat(xPoints_matSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< std::string >::type solver_dir(solver_dirSEXP);
    Rcpp::traits::input_parameter< std::string >::type log_dir(log_dirSEXP);
    num_node_brute_force(xPoints_mat, k, solver_dir, log_dir);
    return R_NilValue;
END_RCPP
}
// optimize
List optimize(NumericMatrix xPoints_mat, int k, int budget, std::vector<std::string> param_prefixes, std::string solver_dir, std::string log_dir);
RcppExport SEXP deepbayes_optimize(SEXP xPoints_matSEXP, SEXP kSEXP, SEXP budgetSEXP, SEXP param_prefixesSEXP, SEXP solver_dirSEXP, SEXP log_dirSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type xPoints_mat(xPoints_matSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type budget(budgetSEXP);
    Rcpp::traits::input_parameter< std::vector<std::string> >::type param_prefixes(param_prefixesSEXP);
    Rcpp::traits::input_parameter< std::string >::type solver_dir(solver_dirSEXP);
    Rcpp::traits::input_parameter< std::string >::type log_dir(log_dirSEXP);
    __result = Rcpp::wrap(optimize(xPoints_mat, k, budget, param_prefixes, solver_dir, log_dir));
    return __result;
END_RCPP
}
// setup
void setup(CharacterVector dir);
RcppExport SEXP deepbayes_setup(SEXP dirSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< CharacterVector >::type dir(dirSEXP);
    setup(dir);
    return R_NilValue;
END_RCPP
}
